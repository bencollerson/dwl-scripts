#!/bin/sh

# scan codes for ydotool
# from here: /usr/include/linux/input-event-codes.h

KEY_LEFTSHIFT=42
KEY_LEFTCTRL=29
#KEY_RIGHTALT=100
KEY_LEFTMETA=125 # windows/super key

KEY_C=46
KEY_R=19
KEY_V=47
KEY_W=17
KEY_X=45

KEY_BACKSPACE=14
KEY_COPY=133
KEY_PASTE=135

# or define lots of keys
# eval $(awk '$2 ~ /^KEY_/ && $3 ~ /^[0-9]*$/ { print $2 "=" $3 }' /usr/include/linux/input-event-codes.h )
# or even
# eval $(awk '$2 ~ /^KEY_/ && $3 ~ /^(0x)?[0-9]+$/ { print $2 "=" $3 }' /usr/include/linux/input-event-codes.h )

usage() {
	cat <<'EOM'
dwl-keys

script to generate key strokes

usage:

Add key bindings for the following commands:

	bind `dwl-keys copy`       to Super+C
	bind `dwl-keys paste`      to Super+V
	bind `dwl-keys cut`        to Super+X
	bind `dwl-keys deleteword` to Super+Backspace

Status bar tag clicks can be bound to these commands:

	`dwl-keys view <tagname>`
	`dwl-keys tag <tagname>`

EOM
	exit 1
}

copy() {
	appid="$1"

	case "$appid" in
		# special cases for certain apps

		foot | footclient )
			ydotool key $KEY_COPY:1 $KEY_COPY:0
			;;

		*)
			ydotool key $KEY_LEFTCTRL:1 $KEY_C:1 $KEY_C:0 $KEY_LEFTCTRL:0
			;;
	esac
}

paste() {
	appid="$1"

	case "$appid" in

		foot | footclient )
			ydotool key $KEY_PASTE:1 $KEY_PASTE:0
			;;

		*)
			ydotool key $KEY_LEFTCTRL:1 $KEY_V:1 $KEY_V:0 $KEY_LEFTCTRL:0
			;;
	esac
}

cut() {
	ydotool key $KEY_LEFTCTRL:1 $KEY_X:1 $KEY_X:0 $KEY_LEFTCTRL:0
}

deleteword() {
	appid="$1"

	case "$appid" in

		foot | footclient )
			ydotool key $KEY_LEFTCTRL:1 $KEY_W:1 $KEY_W:0 $KEY_LEFTCTRL:0
			;;

		*)
			ydotool key $KEY_LEFTCTRL:1 $KEY_BACKSPACE:1 $KEY_BACKSPACE:0 $KEY_LEFTCTRL:0
			;;
	esac
}

view() {
	tag="$1"

	echo "$tag" | grep -q '^[a-z]$' || exit

	ydotool key $KEY_LEFTMETA:1 $KEY_R:1 $KEY_R:0 $KEY_LEFTMETA:0
	ydotool type "$tag"
}

tag() {
	tag="$1"

	echo "$tag" | grep -q '^[a-z]$' || exit

	ydotool key $KEY_LEFTMETA:1 $KEY_LEFTSHIFT:1 $KEY_R:1 $KEY_R:0 $KEY_LEFTSHIFT:0 $KEY_LEFTMETA:0
	ydotool type "$tag"
}

command="$1"
case "$command" in
	copy | paste | deleteword )
		read -r appid < $XDG_RUNTIME_DIR/dwl/appid
		$command "$appid"
		;;

	cut )
		$command
		;;

	tag | view )
		$command "$2"
		;;

	*)
		usage
		;;
esac
